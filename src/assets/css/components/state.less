// State
.lbz-state {
  display: block;
  overflow: hidden;
  position: absolute;
  top: 0;
  left: 0;
  z-index: 1;
  border-radius: inherit;
  width: 100%;
  height: 100%;
  outline: none;
  cursor: default;

  &::before,
  &::after {
    position: absolute;
    border-radius: 50%;
    background-color: var(--lbz-theme-on-surface);
    opacity: #lbz-state.surface[enabled];
    content: "";
    pointer-events: none;
  }

  &::before {
    top: -50%;
    left: -50%;
    width: 200%;
    height: 200%;
    transition: background-color 15ms linear, opacity 15ms linear;
  }

  &:hover {
    cursor: pointer;

    &::before {
      opacity: #lbz-state.surface[hover];
    }
  }

  &:focus::before {
    opacity: #lbz-state.surface[focus];
  }

  &:active::before {
    opacity: #lbz-state.surface[activated];
  }

  // type
  &--primary {
    &:hover::before {
      opacity: #lbz-state.primary[hover];
    }

    &:focus::before {
      opacity: #lbz-state.primary[focus];
    }

    &:active::before {
      opacity: #lbz-state.primary[activated];
    }
  }

  &--image {
    &:hover::before {
      opacity: #lbz-state.image[hover];
    }

    &:focus::before {
      opacity: #lbz-state.image[focus];
    }

    &:active::before {
      opacity: #lbz-state.image[activated];
    }
  }

  // background
  @backgrounds: {
    primary: var(--lbz-theme-primary);
    primary-variant: var(--lbz-theme-primary-variant);
    secondary: var(--lbz-theme-secondary);
    secondary-variant: var(--lbz-theme-secondary-variant);
    background: var(--lbz-theme-background);
    surface: var(--lbz-theme-surface);
    error: var(--lbz-theme-error);
    light: var(--lbz-theme-light);
    dark: var(--lbz-theme-dark);

    on-primary: var(--lbz-theme-on-primary);
    on-primary-variant: var(--lbz-theme-on-primary-variant);
    on-secondary: var(--lbz-theme-on-secondary);
    on-secondary-variant: var(--lbz-theme-on-secondary-variant);
    on-background: var(--lbz-theme-on-background);
    on-error: var(--lbz-theme-on-error);
    on-light: var(--lbz-theme-on-light);
    on-dark: var(--lbz-theme-on-dark);
  };

  each(@backgrounds, {
    &--bg-@{key} {
      &::before,
      &::after {
        background-color: @value;
      }
    }
  });

  // darkened
  html[data-lbz-theme="dark"] &.lbz-is-darkened {
    &::before,
    &::after {
      background-color: var(--lbz-theme-on-dark);
    }
  }

  // selected
  .lbz-is-selected > & {
    &::before {
      opacity: #lbz-state.surface[selected] !important;
    }

    &.lbz-state--primary::before {
      opacity: #lbz-state.primary[selected] !important;
    }

    &.lbz-state--image::before {
      opacity: #lbz-state.image[selected] !important;
    }
  }

  // activated
  .lbz-is-activated > & {
    &::before {
      opacity: #lbz-state.primary[activated] !important;
    }

    &.lbz-state--image::before {
      opacity: #lbz-state.image[activated] !important;
    }
  }

  // NOTE: `:hover`, `:focus`, and `:active` will not work,
  //       mainly applied in Card, List, and List item.
  &-no-before--child > &,
  &-no-before--descendant & {
    &::before {
      content: normal;
    }

    &:hover {
      cursor: default;
    }
  }
}

// ripple
.lbz-ripple {
  --lbz-ripple-top: 0;
  --lbz-ripple-left: 0;
  --lbz-ripple-size: 0;
  --lbz-ripple-opacity: #lbz-state.surface[pressed];
  --lbz-ripple-translate-start: 0, 0, 0;
  --lbz-ripple-translate-end: 0, 0, 0;
  --lbz-ripple-scale: 1;

  &::before {
    transform: scale(var(--lbz-ripple-scale, 1));
  }

  &::after {
    top: var(--lbz-ripple-top, 0);
    left: var(--lbz-ripple-left, 0);
    width: var(--lbz-ripple-size, 100%);
    height: var(--lbz-ripple-size, 100%);
    transform: scale(0);
    transform-origin: center center;
  }

  &:active::before {
    opacity: #lbz-state.surface[enabled] !important;
  }

  // type
  &.lbz-state--primary {
    --lbz-ripple-opacity: #lbz-state.primary[pressed];
  }

  &.lbz-state--image {
    --lbz-ripple-opacity: #lbz-state.image[pressed];
  }

  // unbounded
  &.lbz-is-unbounded {
    overflow: visible;
  }

  &-enter::after {
    animation: lbz-ripple-opacity-in 75ms forwards, lbz-ripple-radius-in 225ms forwards;
  }

  &-leave::after {
    transform: translate3d(var(--lbz-ripple-translate-end, 0, 0, 0)) scale(var(--lbz-ripple-scale, 1));
    animation: lbz-ripple-opacity-out 150ms;
  }
}

@keyframes lbz-ripple-opacity-in {
  from {
    opacity: 0;
    animation-timing-function: linear;
  }

  to {
    opacity: var(--lbz-ripple-opacity, 0);
  }
}

@keyframes lbz-ripple-opacity-out {
  from {
    opacity: var(--lbz-ripple-opacity, 0);
    animation-timing-function: linear;
  }

  to {
    opacity: 0;
  }
}

@keyframes lbz-ripple-radius-in {
  from {
    transform: translate3d(var(--lbz-ripple-translate-start, 0, 0, 0)) scale(1);
    animation-timing-function: #lbz-motion.curve[standard];
  }

  to {
    transform: translate3d(var(--lbz-ripple-translate-end, 0, 0, 0)) scale(var(--lbz-ripple-scale, 1));
  }
}
